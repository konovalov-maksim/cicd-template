name: Build and deploy

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'App'
        required: true
        type: choice
        options:
          - app1
          - app2
        default: app1
      shouldBuild:
        description: 'Should build'
        required: true
        type: boolean
        default: true
      shouldDeploy:
        description: 'Should deploy'
        required: true
        type: boolean
        default: true
      tag:
        description: 'Tag'
        type: string
        default: latest
      profile:
        description: Profile
        type: choice
        options:
          - dev
          - prod
        default: dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup Gradle
        if: inputs.shouldBuild
        uses: gradle/gradle-build-action@v3

      - name: Run build with Gradle Wrapper
        if: inputs.shouldBuild
        run: ./gradlew ${{ inputs.app }}:build

      - name: Build and push Docker image
        if: inputs.shouldBuild
        uses: docker/build-push-action@v5
        with:
          context: ./${{ inputs.app }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:latest


      - name: Set up Docker context
        if: inputs.shouldDeploy
        uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: ssh://${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}
          context_name: remote
          ssh_cert: ${{ secrets.SSH_CERT }}
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run container on remote host
        if: inputs.shouldDeploy
        env:
          PROFILE: ${{ inputs.profile }}
          COMPOSE_PROJECT_NAME: ${{ inputs.profile }}
          TAG: ${{ inputs.tag }}
        run: docker-compose --context remote -f ./${{ inputs.app }}/docker-compose.yml up -d